//
// Generated file, do not edit! Created by opp_msgtool 6.0 from linklayer/ieee802154tsch/IEEE802154TSCHPkt.msg.
//

#ifndef __IEEE802154TSCHPKT_M_H
#define __IEEE802154TSCHPKT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class IEEE802154TSCHPkt;
/**
 * Class generated from <tt>linklayer/ieee802154tsch/IEEE802154TSCHPkt.msg:16</tt> by opp_msgtool.
 * <pre>
 * packet IEEE802154TSCHPkt
 * {
 *     int src;
 *     int dest;
 *     int seqNum;
 *     bool useControlCell;
 * }
 * </pre>
 */
class IEEE802154TSCHPkt : public ::omnetpp::cPacket
{
  protected:
    int src = 0;
    int dest = 0;
    int seqNum = 0;
    bool useControlCell = false;

  private:
    void copy(const IEEE802154TSCHPkt& other);

  protected:
    bool operator==(const IEEE802154TSCHPkt&) = delete;

  public:
    IEEE802154TSCHPkt(const char *name=nullptr, short kind=0);
    IEEE802154TSCHPkt(const IEEE802154TSCHPkt& other);
    virtual ~IEEE802154TSCHPkt();
    IEEE802154TSCHPkt& operator=(const IEEE802154TSCHPkt& other);
    virtual IEEE802154TSCHPkt *dup() const override {return new IEEE802154TSCHPkt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrc() const;
    virtual void setSrc(int src);

    virtual int getDest() const;
    virtual void setDest(int dest);

    virtual int getSeqNum() const;
    virtual void setSeqNum(int seqNum);

    virtual bool getUseControlCell() const;
    virtual void setUseControlCell(bool useControlCell);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const IEEE802154TSCHPkt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, IEEE802154TSCHPkt& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline IEEE802154TSCHPkt *fromAnyPtr(any_ptr ptr) { return check_and_cast<IEEE802154TSCHPkt*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __IEEE802154TSCHPKT_M_H

