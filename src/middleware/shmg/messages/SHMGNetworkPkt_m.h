//
// Generated file, do not edit! Created by opp_msgtool 6.0 from middleware/shmg/messages/SHMGNetworkPkt.msg.
//

#ifndef __SHMGNETWORKPKT_M_H
#define __SHMGNETWORKPKT_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class SHMGNetworkPkt;
/**
 * Class generated from <tt>middleware/shmg/messages/SHMGNetworkPkt.msg:16</tt> by opp_msgtool.
 * <pre>
 * packet SHMGNetworkPkt
 * {
 *     int src;
 *     int dest;
 *     int seq;
 * }
 * </pre>
 */
class SHMGNetworkPkt : public ::omnetpp::cPacket
{
  protected:
    int src = 0;
    int dest = 0;
    int seq = 0;

  private:
    void copy(const SHMGNetworkPkt& other);

  protected:
    bool operator==(const SHMGNetworkPkt&) = delete;

  public:
    SHMGNetworkPkt(const char *name=nullptr, short kind=0);
    SHMGNetworkPkt(const SHMGNetworkPkt& other);
    virtual ~SHMGNetworkPkt();
    SHMGNetworkPkt& operator=(const SHMGNetworkPkt& other);
    virtual SHMGNetworkPkt *dup() const override {return new SHMGNetworkPkt(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrc() const;
    virtual void setSrc(int src);

    virtual int getDest() const;
    virtual void setDest(int dest);

    virtual int getSeq() const;
    virtual void setSeq(int seq);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const SHMGNetworkPkt& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, SHMGNetworkPkt& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline SHMGNetworkPkt *fromAnyPtr(any_ptr ptr) { return check_and_cast<SHMGNetworkPkt*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __SHMGNETWORKPKT_M_H

